name: Deploy Gallery

on:
  repository_dispatch:
    types: [docker-push]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create deployment directory on the remote server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ~/gallery-deploy"

      - name: Copy Docker Compose config
        run: |
          scp -i ~/.ssh/id_rsa ./docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/gallery-deploy/docker-compose.yml

      - name: Create environment variables on the remote server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            echo "APP_ENV=production" > ~/gallery-deploy/.env
            echo "APP_DEBUG=false" >> ~/gallery-deploy/.env
            echo "APP_NAME=${{ secrets.APP_NAME }}" >> ~/gallery-deploy/.env
            echo "APP_KEY=${{ secrets.APP_KEY }}" >> ~/gallery-deploy/.env
            echo "APP_URL=${{ secrets.APP_URL }}" >> ~/gallery-deploy/.env
            echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> ~/gallery-deploy/.env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> ~/gallery-deploy/.env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> ~/gallery-deploy/.env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ~/gallery-deploy/.env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ~/gallery-deploy/.env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> ~/gallery-deploy/.env
            echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> ~/gallery-deploy/.env
            echo "SANCTUM_STATEFUL_DOMAINS=${{ secrets.SANCTUM_STATEFUL_DOMAINS }}" >> ~/gallery-deploy/.env
            echo "SESSION_DOMAIN=${{ secrets.SESSION_DOMAIN }}" >> ~/gallery-deploy/.env
            echo "NODE_ENV=production" >> ~/gallery-deploy/.env
            echo "VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}" >> ~/gallery-deploy/.env
          EOF

      - name: Deploy application using Docker Stack
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ~/gallery-deploy

            echo "Environment Variables:"
            cat .env  # Check the variables in the remote environment

            echo "Stopping and removing old stack..."
            docker stack ls | grep -q gallery && docker stack rm gallery || echo "No stack found to remove"
            sleep 2

            echo "Deploying new stack..."
            export $(cat ~/gallery-deploy/.env | xargs)
            docker stack deploy -c docker-compose.yml gallery

            echo "Deployment completed successfully!"
          EOF
