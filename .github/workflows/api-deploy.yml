name: Deploy API

on:
  repository_dispatch:
    types: [docker-push]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create deployment directory in the home directory on the remote server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ~/api-gallery-deploy"

      - name: Copy Docker Compose config to the home directory on the remote server
        run: |
          scp -i ~/.ssh/id_rsa ./api/docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/api-gallery-deploy/docker-compose.yml

      - name: Copy Nginx conf
        run: |
          scp -i ~/.ssh/id_rsa ./api/nginx.conf ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/api-gallery-deploy/nginx.conf
      

      - name: Copy environment variables
        run: |
          echo "APP_ENV=production" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
          echo "SANCTUM_STATEFUL_DOMAINS=${{ secrets.SANCTUM_STATEFUL_DOMAINS }}" >> .env
          echo "SESSION_DOMAIN=${{ secrets.SESSION_DOMAIN }}" >> .env
       
          scp -i ~/.ssh/id_rsa .env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/api-gallery-deploy/.env

      - name: Deploy application using Docker Compose
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            export COMPOSE_PROJECT_NAME=gallery_api 
          
            cd ~/api-gallery-deploy
          
            echo "Stopping and removing old containers..."
            docker-compose down --volumes --remove-orphans
            sleep 2
          
            echo "Starting containers..."
            docker-compose up -d
          
            sleep 5
          
            docker-compose exec db bash -c 'echo $DB_PASSWORD'
            
            sleep 5
          
          
            echo "Running migrations and clearing caches..."
            docker-compose exec app php artisan migrate --force
            docker-compose exec app php artisan cache:clear
            docker-compose exec app php artisan config:clear
            docker-compose exec app php artisan route:clear
          
            echo "Deployment completed successfully!"
          EOF
          
